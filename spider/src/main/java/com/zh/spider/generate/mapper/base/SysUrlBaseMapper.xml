<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.spider.generate.mapper.base.SysUrlBaseMapper">


    <insert id="insertSysUrl"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `url`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="url!=null">
                        `url`,
                    </if>
                    <if test="remark!=null">
                        `remark`,
                    </if>
                    <if test="level!=null">
                        `level`,
                    </if>
                    <if test="create!=null">
                        `create`,
                    </if>
                    <if test="update!=null">
                        `update`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="url!=null">
                    #{url},
                </if>
                <if test="remark!=null">
                    #{remark},
                </if>
                <if test="level!=null">
                    #{level},
                </if>
                <if test="create!=null">
                    #{create},
                </if>
                <if test="update!=null">
                    #{update},
                </if>
        </trim>
        )
    </insert>




    <update id="updateSysUrl">
        UPDATE `url`
        SET
        <trim suffixOverrides=",">
            <if test="url != null and url!=''">
                `url` = #{url},
            </if>
            <if test="remark != null and remark!=''">
                `remark` = #{remark},
            </if>
            <if test="level != null">
                `level` = #{level},
            </if>
            <if test="create != null">
                `create` = #{create},
            </if>
            <if test="update != null">
                `update` = #{update},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `url`
        SET
        <trim suffixOverrides=",">
        <if test="set.url != null and set.url!=''">
            `url` = #{set.url},
        </if>
        <if test="set.remark != null and set.remark!=''">
            `remark` = #{set.remark},
        </if>
        <if test="set.level != null">
            `level` = #{set.level},
        </if>
        <if test="set.create != null">
            `create` = #{set.create},
        </if>
        <if test="set.update != null">
            `update` = #{set.update},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.urlList != null">
                    `url` in
                    <foreach collection="where.urlList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyUrl!=null and where.fuzzyUrl.size()>0">
                (
                <foreach collection="where.fuzzyUrl"  separator="or" item="item">
                    `Url` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyUrl!=null and where.rightFuzzyUrl.size()>0">
                (
                <foreach collection="where.rightFuzzyUrl"  separator="or" item="item">
                    `Url` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.remarkList != null">
                    `remark` in
                    <foreach collection="where.remarkList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyRemark!=null and where.fuzzyRemark.size()>0">
                (
                <foreach collection="where.fuzzyRemark"  separator="or" item="item">
                    `Remark` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyRemark!=null and where.rightFuzzyRemark.size()>0">
                (
                <foreach collection="where.rightFuzzyRemark"  separator="or" item="item">
                    `Remark` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.levelList != null">
                    `level` in
                    <foreach collection="where.levelList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.levelSt !=null">
                `level` >= #{where.levelSt} and
            </if>
            <if test="where.levelEd!=null">
                `level` &lt;= #{where.levelEd} and
            </if>
                <if test="where.createList != null">
                    `create` in
                    <foreach collection="where.createList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createSt !=null">
                `create` >= #{where.createSt} and
            </if>
            <if test="where.createEd!=null">
                `create` &lt;= #{where.createEd} and
            </if>
                <if test="where.updateList != null">
                    `update` in
                    <foreach collection="where.updateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.updateSt !=null">
                `update` >= #{where.updateSt} and
            </if>
            <if test="where.updateEd!=null">
                `update` &lt;= #{where.updateEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.zh.spider.generate.model.SysUrl" id="SysUrlMap">
        <result property="id" column="id"/>
        <result property="url" column="url"/>
        <result property="remark" column="remark"/>
        <result property="level" column="level"/>
        <result property="create" column="create"/>
        <result property="update" column="update"/>
    </resultMap>


    <select id="querySysUrl" resultMap="SysUrlMap">
        select
        <include refid="baseResult"></include>
        from  `url`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="url != null and url!=''">
                `url` = #{url} and
            </if>
            <if test="remark != null and remark!=''">
                `remark` = #{remark} and
            </if>
            <if test="level != null">
                `level` = #{level} and
            </if>
            <if test="create != null">
                `create` = #{create} and
            </if>
            <if test="update != null">
                `update` = #{update} and
            </if>
            <if test = "(_parameter instanceof com.zh.spider.generate.model.SysUrl$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="urlList != null">
                    `url` in
                    <foreach collection="urlList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyUrl!=null and fuzzyUrl.size()>0">
                    (
                    <foreach collection="fuzzyUrl"  separator="or" item="item">
                        `Url` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyUrl!=null and rightFuzzyUrl.size()>0">
                    (
                    <foreach collection="rightFuzzyUrl"  separator="or" item="item">
                        `Url` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="remarkList != null">
                    `remark` in
                    <foreach collection="remarkList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyRemark!=null and fuzzyRemark.size()>0">
                    (
                    <foreach collection="fuzzyRemark"  separator="or" item="item">
                        `Remark` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyRemark!=null and rightFuzzyRemark.size()>0">
                    (
                    <foreach collection="rightFuzzyRemark"  separator="or" item="item">
                        `Remark` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="levelList != null">
                    `level` in
                    <foreach collection="levelList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="levelSt !=null">
                    `level` >= #{levelSt} and
                </if>
                <if test="levelEd!=null">
                    `level` &lt;= #{levelEd} and
                </if>
                <if test="createList != null">
                    `create` in
                    <foreach collection="createList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createSt !=null">
                    `create` >= #{createSt} and
                </if>
                <if test="createEd!=null">
                    `create` &lt;= #{createEd} and
                </if>
                <if test="updateList != null">
                    `update` in
                    <foreach collection="updateList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="updateSt !=null">
                    `update` >= #{updateSt} and
                </if>
                <if test="updateEd!=null">
                    `update` &lt;= #{updateEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="querySysUrlLimit1" resultMap="SysUrlMap">
        select
        <include refid="baseResult"></include>
        from  `url`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="url != null and url!=''">
                `url` = #{url} and
            </if>
            <if test="remark != null and remark!=''">
                `remark` = #{remark} and
            </if>
            <if test="level != null">
                `level` = #{level} and
            </if>
            <if test="create != null">
                `create` = #{create} and
            </if>
            <if test="update != null">
                `update` = #{update} and
            </if>
            <if test = "(_parameter instanceof com.zh.spider.generate.model.SysUrl$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="urlList != null">
                        `url` in
                        <foreach collection="urlList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyUrl!=null and fuzzyUrl.size()>0">
                    (
                    <foreach collection="fuzzyUrl"  separator="or" item="item">
                        `Url` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyUrl!=null and rightFuzzyUrl.size()>0">
                    (
                    <foreach collection="rightFuzzyUrl"  separator="or" item="item">
                        `Url` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="remarkList != null">
                        `remark` in
                        <foreach collection="remarkList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyRemark!=null and fuzzyRemark.size()>0">
                    (
                    <foreach collection="fuzzyRemark"  separator="or" item="item">
                        `Remark` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyRemark!=null and rightFuzzyRemark.size()>0">
                    (
                    <foreach collection="rightFuzzyRemark"  separator="or" item="item">
                        `Remark` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="levelList != null">
                        `level` in
                        <foreach collection="levelList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="levelSt !=null">
                    `level` >= #{levelSt} and
                </if>
                <if test="levelEd!=null">
                    `level` &lt;= #{levelEd} and
                </if>
                    <if test="createList != null">
                        `create` in
                        <foreach collection="createList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createSt !=null">
                    `create` >= #{createSt} and
                </if>
                <if test="createEd!=null">
                    `create` &lt;= #{createEd} and
                </if>
                    <if test="updateList != null">
                        `update` in
                        <foreach collection="updateList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="updateSt !=null">
                    `update` >= #{updateSt} and
                </if>
                <if test="updateEd!=null">
                    `update` &lt;= #{updateEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `url`,
        `remark`,
        `level`,
        `create`,
        `update`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.zh.spider.generate.model.SysUrl$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.url==true">
                        `url`,
                    </if>
                    <if test="fetchFields.fetchFields.remark==true">
                        `remark`,
                    </if>
                    <if test="fetchFields.fetchFields.level==true">
                        `level`,
                    </if>
                    <if test="fetchFields.fetchFields.create==true">
                        `create`,
                    </if>
                    <if test="fetchFields.fetchFields.update==true">
                        `update`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.url==null">
                        `url`,
                    </if>
                    <if test="fetchFields.excludeFields.remark==null">
                        `remark`,
                    </if>
                    <if test="fetchFields.excludeFields.level==null">
                        `level`,
                    </if>
                    <if test="fetchFields.excludeFields.create==null">
                        `create`,
                    </if>
                    <if test="fetchFields.excludeFields.update==null">
                        `update`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.zh.spider.generate.model.SysUrl$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>